substring(rownames(m), nchar(rownames(m))-12,nchar(rownames(m))-4))
rownames(m) <- paste(substring(rownames(m),1,3),rep('..',nrow(m)),
substring(rownames(m), nchar(rownames(m))-12,nchar(rownames(m))-4))
View(m)
BookNamesShort <- Books
BookNamesShort[1] <- 'Dictionary of Greek and Roman Geography'
BookNamesShort[2] <- 'History of TACITUS: Book 1'
BookNamesShort[3] <- 'The Pelopnnesian War: Book V'
BookNamesShort[4] <- 'Decline and Fall of the Roman Empire: Vol 1'
BookNamesShort[5] <- 'The History of Rome: Vol 1. Titus Livius'
BookNamesShort[6] <- 'Antiquities of the Jews: IX. Works of Josephus'
BookNamesShort[7] <- 'Decline and Fall of the Roman Empire: Vol 3'
BookNamesShort[8] <- 'The Description of Greece'
BookNamesShort[9] <- 'History of Rome: Vol 3. (Book4) By Theodor Mommsem'
BookNamesShort[10] <- 'History of Rome: Vol 3. Translated George Baker'
BookNamesShort[11] <- 'History of the Peloponnesian War: Vol/Book 1'
BookNamesShort[12] <- 'Decline and Fall of the Roman Empire: Vol 4'
BookNamesShort[13] <- 'Decline and Fall of the Roman Empire: Vol 2'
BookNamesShort[14] <- 'The History of Rome: Book 1. By Titus Livius'
BookNamesShort[15] <- 'Annals of Tacitus: Vol I'
BookNamesShort[16] <- 'The Jewish War: Book III. Works of Josephus'
BookNamesShort[17] <- 'Annals of Tacitus: Vol IV'
BookNamesShort[18] <- 'The History of Rome: Vol 5. Titus Livius'
BookNamesShort[19] <- 'Antiquities of the Jews: I. Works of Josephus'
BookNamesShort[20] <- 'The natural History of Pliny: Book I'
BookNamesShort[21] <- 'Decline and Fall of the Roman Empire: Vol 5'
BookNamesShort[22] <- 'The History of Tacitus'
BookNamesShort[23] <- 'Decline and Fall of the Roman Empire: Vol 6'
BookNamesShort[24] <- 'Antiquities of the Jews: XVII. Works of Josephus'
rownames(m) <- BookNamesShort
View(m)
?hclust
groups <- hclust(d,method=”ward.D”)
groups <- hclust(m,method=”ward.D”)
groups <- hclust(m,method='ward.D)
groups <- hclust(m,method='ward.D')
sum(is.na(m))
is.na(m)
groups <- hclust(m,method='ward.D')
distMatrix <- dist(scale(m))
distMatrix
groups <- hclust(distMatrix,method='ward.D')
plot(groups, hang=-1)
Books[9]
Books[10]
Books[20]
BookNamesShort <- Books
BookNamesShort[1] <- 'Dictionary of Greek and Roman Geography'
BookNamesShort[2] <- 'History of Tacitus: Book 1'
BookNamesShort[3] <- 'The Pelopnnesian War: Book V'
BookNamesShort[4] <- 'Decline and Fall of the Roman Empire: Vol 1'
BookNamesShort[5] <- 'The History of Rome: Vol 1. Titus Livius'
BookNamesShort[6] <- 'Antiquities of the Jews: IX. Works of Josephus'
BookNamesShort[7] <- 'Decline and Fall of the Roman Empire: Vol 3'
BookNamesShort[8] <- 'The Description of Greece'
BookNamesShort[9] <- 'History of Rome: Vol 3. Theodor Mommsem'
BookNamesShort[10] <- 'History of Rome: Vol 3. Livy'
BookNamesShort[11] <- 'History of the Peloponnesian War: Book 1'
BookNamesShort[12] <- 'Decline and Fall of the Roman Empire: Vol 4'
BookNamesShort[13] <- 'Decline and Fall of the Roman Empire: Vol 2'
BookNamesShort[14] <- 'The History of Rome: Book 1. Titus Livius'
BookNamesShort[15] <- 'Annals of Tacitus: Vol I'
BookNamesShort[16] <- 'The Jewish War: Book III. Works of Josephus'
BookNamesShort[17] <- 'Annals of Tacitus: Vol IV'
BookNamesShort[18] <- 'The History of Rome: Vol 5. Titus Livius'
BookNamesShort[19] <- 'Antiquities of the Jews: I. Works of Josephus'
BookNamesShort[20] <- 'The natural History of Pliny: Book I'
BookNamesShort[21] <- 'Decline and Fall of the Roman Empire: Vol 5'
BookNamesShort[22] <- 'The History of Tacitus'
BookNamesShort[23] <- 'Decline and Fall of the Roman Empire: Vol 6'
BookNamesShort[24] <- 'Antiquities of the Jews: XVII. Works of Josephus'
rownames(m) <- BookNamesShort
distMatrix <- dist(scale(m))
groups <- hclust(distMatrix,method='ward.D')
plot(groups, hang=-1)
?KMEANS
?kmeans
library(cluster)
kfit <- kmeans(d, 6, nstart=100)
kfit <- kmeans(distMatrix, 6, nstart=100)
clusplot(m, kfit$cluster, color=T, shade=T, labels=2, lines=0)
library(wordCloud)
install.packages("wordcloud")
library(wordcloud)
WordFrec.sort <- sort(rowSums(m), decreasing = T)
set.seed(1234)
grayLevels <- gray( (WordFrec.sort + 10) / (max(WordFrec.sort) + 10))
word.cloud <- wordCloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=50,
random.order=F, colors=grayLevels)
word.cloud <- wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=50,
random.order=F, colors=grayLevels)
WordFrec.sort <- sort(colSums(m), decreasing = T)
set.seed(1234)
grayLevels <- gray( (WordFrec.sort + 10) / (max(WordFrec.sort) + 10))
word.cloud <- wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=50,
random.order=F, colors=grayLevels)
word.cloud <- wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels)
norm_eucl <- function(m) m/apply(m, MARGIN=1, FUN=function(x) sum(x^2)^.5)
m_norm <- norm_eucl(m)
cl <- kmeans(m_norm, 10)
cl
table(cl$cluster)
plot(prcomp(m_norm)$x, col=cl$cl)
cl <- kmeans(m_norm, 6)
cl
table(cl$cluster)
plot(prcomp(m_norm)$x, col=cl$cl)
kfit <- kmeans(distMatrix, 2, nstart=100)
library(cluster)
clusplot(m, kfit$cluster, color=T, shade=T, labels=2, lines=0)
?clusplot
7
class(m)
class(distMatrix)
clusplot(m,2)
clusplot(distMatrix,2)
?transpose
clusplot(t(m),2)
kfit
kfit$cluster
clusplot(distMatrix, kfit$cluster, color=T, shade=T, labels=2, lines=0)
clusplot(m, kfit$cluster)
?princomp.default
plot(prcomp(m_norm)$x, col=cl$cl)
plot(groups, hang=-1)
word.cloud <- wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels)
BookNamesShorter <- Books
BookNamesShorter [1] <- 'Dictionary Greek and Roman Geog'
BookNamesShorter [2] <- 'History of Tacitus: Book 1'
BookNamesShorter [3] <- 'The Peloponnesian War V'
BookNamesShorter [4] <- 'Dec and Fall of Roman Empire 1'
BookNamesShorter [5] <- 'History of Rome 1. Titus Livius'
BookNamesShorter [6] <- 'Ant of Jews: IX. Josephus'
BookNamesShorter [7] <- 'Dec and Fall of Roman Empire 3'
BookNamesShorter [8] <- 'The Description of Greece'
BookNamesShorter [9] <- 'History of Rome: Vol 3. Mommsem'
BookNamesShorter [10] <- 'History of Rome: Vol 3. Livy'
BookNamesShorter [11] <- 'History of Peloponnesian War 1'
BookNamesShorter [12] <- 'Dec and Fall of Roman Empire 4'
BookNamesShorter [13] <- 'Dec and Fall of Roman Empire 2'
BookNamesShorter [14] <- 'History of Rome B 1. Titus Livius'
BookNamesShorter [15] <- 'Annals of Tacitus: Vol I'
BookNamesShorter [16] <- 'The Jewish War III. Josephus'
BookNamesShorter [17] <- 'Annals of Tacitus IV'
BookNamesShorter [18] <- 'The History of Rome 5. Titus Livius'
BookNamesShorter [19] <- 'Ant of Jews: I. Josephus'
BookNamesShorter [20] <- 'The natural History of Pliny'
BookNamesShorter [21] <- 'Dec and Fall of Roman Empire 5'
BookNamesShorter [22] <- 'The History of Tacitus'
BookNamesShorter [23] <- 'Dec and Fall of Roman Empire 6'
BookNamesShorter [24] <- 'Ant of Jews: XVII. Josephus'
rownames(m) <- BookNamesShorter
rownames(m_tfidf) <- BookNamesShorter
m_tfidf <- as.matrix(dtms_tfxidf)
dtm_tfxidf <- weightTfIdf(dtm)
dtms_tfxidf <- weightTfIdf(dtms)
package(tm)
dtm_tfxidf <- weightTfIdf(dtm)
library(tm)
dtm_tfxidf <- weightTfIdf(dtm)
dtms_tfxidf <- weightTfIdf(dtms)
m_tfidf <- as.matrix(dtms_tfxidf)
rownames(m) <- BookNamesShorter
rownames(m_tfidf) <- BookNamesShorter
rownames(m_tfidf) <- BookNamesShorter
cosMatrix_tfidf <- dist(m_tfidf,method='cosine')
hc2 <- hclust(cosMatrix_tfidf, method='average')
plot(hc2)
library(proxy)
cosMatrix_tfidf <- dist(m_tfidf,method='cosine')
hc2 <- hclust(cosMatrix_tfidf, method='average')
plot(hc2)
fit <- cmdscale(distMatrix, eig = TRUE, k = 2)
x <- fit$points[, 1]
y <- fit$points[, 2]
plot(x, y, pch = 19, xlim = range(x) + c(0, 600))
text(x, y, pos = 4, labels = BookNamesShorter)
plot(y, x, pch = 19, xlim = range(x) + c(0, 600))
text(y, x, pos = 4, labels = BookNamesShorter)
plot(x, y, pch = 19, xlim = range(x) + c(0, 600))
text(x, y, pos = 4, labels = BookNamesShorter)
plot(x, y, pch = 19, xlim = range(x) + c(0, 600), main ='MultiDimensional Scaling')
text(x, y, pos = 4, labels = BookNamesShorter)
bsk.network<-graph.data.frame(cosMatrix_tfidf, directed=F)
require(igraph)
install.packages("igraph")
library(igraph)
bsk.network<-graph.data.frame(cosMatrix_tfidf, directed=F)
bsk.network<-graph.data.frame(as.matrix(cosMatrix_tfidf), directed=F)
V(bsk.network) #prints the list of vertices (people)
E(bsk.network) #prints the list of edges (relationships)
plot(bsk.network)
degree(bsk.network) #print the number of edges per vertex (relationships per people)
plot(bsk.network)
library(igraph)
bsk.network<-graph.data.frame(as.matrix(cosMatrix_tfidf), directed=F)
V(bsk.network) #prints the list of vertices (people)
E(bsk.network) #prints the list of edges (relationships)
degree(bsk.network) #print the number of edges per vertex (relationships per people)
plot(bsk.network)
degree
summary(bsk.network)
class(bsk.network)
degree(bsk.network) #print the number of edges per vertex (relationships per people)
degree(bsk.network) #print the number of edges per vertex (relationships per people)
V(bsk.network) #prints the list of vertices (people)
E(bsk.network) #prints the list of edges (relationships)
cosMatrix_tfidf
summary(cosMatrix)
summary(cosMatrix_tfidf)
structure(cosMatrix_tfidf)
dim(cosMatrix_tfidf)
as.matrix(distMatrix)
dim(as.matrix(distMatrix))
dim(as.matrix(cosMatrix_tfidf))
cosMAt <- as.matrix(cosMatrix_tfidf)
view(cosMAt)
View(cosMAt)
cosMat <- 1-cosMat
cosMat <- 1-cosMAt
View(cosMat)
?graph.data.frame
corrMatrix <- 1 - as.matrix(cosMatrix_tfidf)
View(corrMatrix)
rm(cosMat,cosMAt)
bsk.network<-graph.data.frame(corrMatrix, directed=F)
plot(bsk.network)
inspect(bsk.network)
library(XML)
library(tm)
inspect(bsk.network)
bsk.network
corrMatrix <- 1 - as.matrix(cosMatrix_tfidf)
diag(corrMatrix)<-0
graph<-graph.adjacency(corrMatrix,weighted=TRUE,mode="lower")
plot(graph)
graph <- delete.edges(graph, E(graph)[ weight < 0.8 ])
(graph)
graph<-graph.adjacency(corrMatrix,weighted=TRUE,mode="lower")
graph <- delete.edges(graph, E(graph)[ weight < 0.8 ])
plot(graph)
graph<-graph.adjacency(corrMatrix,weighted=TRUE,mode="lower")
graph <- delete.edges(graph, E(graph)[ weight < 0.5 ])
plot(graph)
graph <- delete.edges(graph, E(graph)[ weight < 0.6 ])
plot(graph)
BookNamesShortest <- Books
BookNamesShortest [1] <- 'Geo Dictionary'
BookNamesShortest [2] <- 'Tacitus 1'
BookNamesShortest [3] <- 'Peloponnesian War V'
BookNamesShortest [4] <- 'Fall of Rome 1'
BookNamesShortest [5] <- 'Livius 1'
BookNamesShortest [6] <- 'Josephus IX'
BookNamesShortest [7] <- 'Fall of Rome 3'
BookNamesShortest [8] <- 'Description of Greece'
BookNamesShortest [9] <- 'History of Rome. Mommsem'
BookNamesShortest [10] <- 'History of Rome. Livy'
BookNamesShortest [11] <- 'Peloponnesian War 1'
BookNamesShortest [12] <- 'Fall of Rome 4'
BookNamesShortest [13] <- 'Fall of Rome 2'
BookNamesShortest [14] <- 'Livius 2'
BookNamesShortest [15] <- 'Tacitus Vol I'
BookNamesShortest [16] <- 'Josephus III'
BookNamesShortest [17] <- 'Tacitus IV'
BookNamesShortest [18] <- 'Livius 5'
BookNamesShortest [19] <- 'Josephus I'
BookNamesShortest [20] <- 'Pliny'
BookNamesShortest [21] <- 'Dec and Fall of Roman Empire 5'
BookNamesShortest [22] <- 'The History of Tacitus'
BookNamesShortest [23] <- 'Dec and Fall of Roman Empire 6'
BookNamesShortest [24] <- 'Ant of Jews: XVII. Josephus'
m_short <- as.matrix(dtms)
rownames(m_short) <- BookNamesShortest
m_short <- as.matrix(dtms_tfidf)
m_short_tfidf <- as.matrix(dtms_tfidf)
rownames(m_short_tfidf) <- BookNamesShortest
library(proxy)
cosMatrix_short_tfidf <- dist(m_short_tfidf,method='cosine')
m_short_tfidf <- as.matrix(dtms_tfidf)
m_short_tfidf <- as.matrix(dtms_tfxidf)
rownames(m_short_tfidf) <- BookNamesShortest
cosMatrix_short_tfidf <- dist(m_short_tfidf,method='cosine')
corrMatrix <- 1 - as.matrixcosMatrix_short_tfidf)
corrMatrix <- 1 - as.matrix(cosMatrix_short_tfidf)
diag(corrMatrix)<-0
corrMatrix_short <- 1 - as.matrix(cosMatrix_short_tfidf)
corrMatrix_short <- 1 - as.matrix(cosMatrix_short_tfidf)
diag(corrMatrix_short)<-0
graph<-graph.adjacency(corrMatrix_short,weighted=TRUE,mode="lower")
graph <- delete.edges(graph, E(graph)[ weight < 0.6 ])
plot(graph)
?graph.adjacency
E(graph)$width <- E(graph)$weight + min(E(graph)$weight) + 1 # offset=1
plot(graph)
E(graph)$width <- E(graph)$weight + min(E(graph)$weight) + 3
plot(graph)
BookNamesShortest <- Books
BookNamesShortest [1] <- 'Geo Dictionary'
BookNamesShortest [2] <- 'Tacitus 1'
BookNamesShortest [3] <- 'Peloponnesian War V'
BookNamesShortest [4] <- 'Fall of Rome 1'
BookNamesShortest [5] <- 'Livius 1'
BookNamesShortest [6] <- 'Josephus IX'
BookNamesShortest [7] <- 'Fall of Rome 3'
BookNamesShortest [8] <- 'Desc of Greece'
BookNamesShortest [9] <- 'Hist of Rome. Mommsem'
BookNamesShortest [10] <- 'Hist of Rome. Livy'
BookNamesShortest [11] <- 'Peloponnesian War 1'
BookNamesShortest [12] <- 'Fall of Rome 4'
BookNamesShortest [13] <- 'Fall of Rome 2'
BookNamesShortest [14] <- 'Livius 2'
BookNamesShortest [15] <- 'Tacitus Vol I'
BookNamesShortest [16] <- 'Josephus III'
BookNamesShortest [17] <- 'Tacitus IV'
BookNamesShortest [18] <- 'Livius 5'
BookNamesShortest [19] <- 'Josephus I'
BookNamesShortest [20] <- 'Pliny'
BookNamesShortest [21] <- 'Fall of Rome 5'
BookNamesShortest [22] <- 'Tacitus'
BookNamesShortest [23] <- 'Fall of Rome 6'
BookNamesShortest [24] <- 'Josephus XVII'
rownames(m_short_tfidf) <- BookNamesShortest
cosMatrix_short_tfidf <- dist(m_short_tfidf,method='cosine')
corrMatrix_short <- 1 - as.matrix(cosMatrix_short_tfidf)
graph<-graph.adjacency(corrMatrix_short,weighted=TRUE,mode="lower", diag = F)
graph <- delete.edges(graph, E(graph)[ weight < 0.6 ])
E(graph)$width <- E(graph)$weight + min(E(graph)$weight) + 3
plot(graph)
plot(graph, `vertex.attributes<-`(graph , index = V(graph), color='red'))
plot(graph, `vertex.attributes<-`(graph , index = V(graph), colour='red'))
plot(graph, vertex.color = 'red')
plot(graph, vertex.color = 'red', edge.color = 'black')
plot(graph, vertex.color = 'lightblue', edge.color = 'black')
plot(graph, vertex.color = 'lightblue')
plot(graph, vertex.color = 'lightblue', vertex.frame.color = 'white')
plot(graph, vertex.color = 'lightblue', vertex.frame.color = 'white', vertel.label.color = 'black')
plot(graph, vertex.color = 'lightblue', vertex.frame.color = 'white', vertex.label.color = 'black')
vertex.label.family = 'sans')
',
vertex.label.family = 'sans')
plot(graph, vertex.color = 'lightblue', vertex.frame.color = 'white', vertex.label.color = 'black', vertex.label.family = 'sans')
View(m)
wordFrec.sort_perdocument <- sort(m[:,1], decreasing = T)
wordFrec.sort_perdocument <- sort(m[,1], decreasing = T)
wordFrec.sort_perdocument <- sort(m[1,], decreasing = T)
set.seed(1234)
grayLevels <- gray( (WordFrec.sort + 10) / (max(WordFrec.sort) + 10))
rm(wordFrec.sort_perdocument)
wordFrec.sort <- sort(m[1,], decreasing = T)
set.seed(1234)
grayLevels <- gray( (WordFrec.sort + 10) / (max(WordFrec.sort) + 10))
word.cloud <- wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels)
library(wordcloud)
word.cloud <- wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels)
?wordcloud
word.cloud <- wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels, max.words = 50, fixed.asp=T)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels, max.words = 100, fixed.asp=T)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels, max.words = 150, fixed.asp=T)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels, max.words = 150, fixed.asp=T,
scale=c(8,.3),)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels, max.words = 150, fixed.asp=T,
scale=c(4,.3),)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, colors=grayLevels, max.words = 150, fixed.asp=T,
scale=c(4,.1))
library(RColorBrewer)
library(wordcloud)
library(RColorBrewer)
WordFrec.sort <- sort(colSums(m), decreasing = T)
wordFrec.sort <- sort(m[1,], decreasing = T)
WordFrec.sort <- sort(m[1,], decreasing = T)
rm(wordFrec.sort)
WordFrec.sort <- sort(m[1,], decreasing = T)
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud_packages.png", width=1280,height=800)
grayLevels <- gray( (WordFrec.sort + 10) / (max(WordFrec.sort) + 10))
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud_packages.png", width=1280,height=800)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=100,
random.order=F, max.words = Inf,
scale=c(8,.2),rot.per=.15, colors=pal2)
?set.seed
set.seed(NULL)
pal2 <- brewer.pal(8,"Dark2")
png("wordcloud_packages.png", width=1280,height=800)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=50,
random.order=F, max.words = Inf,
scale=c(8,.2),rot.per=.15, colors=pal2)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=50,
random.order=F, max.words = Inf,
scale=c(8,.2),rot.per=.15, colors=pal2)
wordcloud(words=names(WordFrec.sort), freq=WordFrec.sort, min.freq=50,
random.order=F, max.words = Inf,
scale=c(5,.2),rot.per=.15, colors=pal2)
dev.off()
?dev.off
library(proxy)
cosMatrix_tfidf <- dist(m_tfidf,method='cosine')
hc2 <- hclust(cosMatrix_tfidf, method='average')
plot(hc2, main='Hierarchical Clustering: Cosine distance')
plot(hc2, main='Hierarchical Clustering: Cosine distance')
hc2 <- hclust(cosMatrix_tfidf, method='average')
plot(hc2)
inspect(dtms)
library(tm)
inspect(dtms)
summary(dtms)
str(dtms)
inspect(dtms)
inspect(dtms)
freq <- colSums(as.matrix(dtm))
length(freq)
ord <- order(freq)
hist(freq,1000)
hist(freq,100)
hist(freq,10)
head(freq)
head(ord)
tail(ord)
dim(ord)
str(ord)
hist(ord,100)
hist(ord,1000)
str(freq)
head(freq[ord])
tail(freq[ord])
hist(freq[ord],1000)
hist(freq)
hist(freq,100)
?order
hist(dtm,100)
hist(as.matrix(dtm),100)
?hist
dtms
dtms
summary(dtms)
inspect(dtms)
freq
dtms[,1:10]
s
freq <- colSums(as.matrix(dtms))
length(freq)
ord <- order(freq)
hist(prueba,1000)
hist(freq[ord],1000)
hist(freq[ord],300)
freq[tail(ord, 20)]
dtms[,ord[1730:1745]]
as.matrix(dtms[,ord[1730:1745]])
m[,ord[1730:1745]]
m_short[,ord[1730:1745]]
table(m_short[,ord[1730:1745]])
m_short[,ord[1730:1745]]
wordfreq <- m_short[,ord[1730:1745]]
rm(vamosaver)
View(wordfreq)
wordfreq <- m_short[,ord[1745:1730]]
View(wordfreq)
wordfreq <- m_short[,ord[1745:1733]]
wordfreq <- m_short[,ord[1745:1730]]
wordfreq <- m_short[,ord[1745:1731]]
class(wordfreq)
write.csv(wordfreq, 'wordFreq.csv')
write.table(wordfreq, 'clipboard', sep='\t')
hc2 <- hclust(cosMatrix_tfidf, method='average')
plot(hc2, main='Hierarchical Clustering: Cosine distance')
?plot
plot(hc2, main='Hierarchical Clustering', xlab = '', ylab = '')
hc2 <- hclust(cosMatrix_tfidf, method='ward.D')
plot(hc2, main='Hierarchical Clustering', xlab = '', ylab = '')
plot(hc2, main='Hierarchical Clustering', xlab = '', ylab = '', sub='')
hc2 <- hclust(cosMatrix_tfidf, method='average')
plot(hc2, main='Hierarchical Clustering', xlab = '', ylab = '', sub='')
fit <- cmdscale(distMatrix, eig = TRUE, k = 2)
x <- fit$points[, 1]
y <- fit$points[, 2]
plot(x, y, pch = 19, xlim = range(x) + c(0, 600), main ='MultiDimensional Scaling')
plot(prcomp(m_norm)$x, col=cl$cl, cex = 2, pch = 21, bg = cl$cl, main='k-means')
text(prcomp(m_norm)$x, BookNamesShort)
d
norm_eucl <- function(m_tfidf) m_tfidf/apply(m_tfidf, MARGIN=1, FUN=function(x) sum(x^2)^.5)
m_norm <- norm_eucl(m_tfidf)
cl <- kmeans(m_norm, 6)
table(cl$cluster)
plot(prcomp(m_norm)$x, col=cl$cl, cex = 2, pch = 21, bg = cl$cl, main='k-means')
text(prcomp(m_norm)$x, BookNamesShort)
norm_eucl <- function(m) m/apply(m, MARGIN=1, FUN=function(x) sum(x^2)^.5)
m_norm <- norm_eucl(m)
cl <- kmeans(m_norm, 6)
table(cl$cluster)
plot(prcomp(m_norm)$x, col=cl$cl, cex = 2, pch = 21, bg = cl$cl, main='k-means')
text(prcomp(m_norm)$x, BookNamesShort)
norm_eucl <- function(m) m/apply(m, MARGIN=1, FUN=function(x) sum(x^2)^.5)
m_norm <- norm_eucl(m)
### cluster into 6 clusters
cl <- kmeans(m_norm, 6)
table(cl$cluster)
### show clusters using the first 2 principal components
plot(prcomp(m_norm)$x, col=cl$cl, cex = 2, pch = 21, bg = cl$cl, main='k-means')
# Add labels to the points
text(prcomp(m_norm)$x, BookNamesShort)
